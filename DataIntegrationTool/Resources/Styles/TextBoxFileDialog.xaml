<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:metro="http://metro.mahapps.com/winfx/xaml/controls">
    <Style x:Key="OpenFileMetroTextBox"
           BasedOn="{StaticResource ButtonCommandMetroTextBox}"
           TargetType="{x:Type TextBox}">
        <Setter Property="metro:TextBoxHelper.ButtonTemplate">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid MaxHeight="100" Background="{TemplateBinding Background}">
                        <Grid x:Name="foo"
                              MaxHeight="100"
                              Margin="{TemplateBinding Padding}"
                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                              Opacity="0.75"
                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                            <Canvas Width="15"
                                    Height="15"
                                    Clip="F1 M 0,0L 48,0L 48,48L 0,48L 0,0">
                                <Path Width="15.7781"
                                      Height="15.7781"
                                      Data="F1 M 16.6668,20L 13,28.5336L 13,16L 23,16L 23,15C 23,13.8954 23.8954,13 25,13L 32,13C 33.1046,13 35,14.8954 35,16L 35,20L 16.6668,20 Z M 35,32L 28,32L 13,32L 17.5833,21L 39.5833,21L 35,32 Z "
                                      Fill="{TemplateBinding Foreground}"
                                      Stretch="Fill" />
                            </Canvas>
                        </Grid>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ButtonCommandMetroTextBox"
           BasedOn="{StaticResource MetroButtonTextBox}"
           TargetType="{x:Type TextBox}" />

    <Style x:Key="MetroButtonTextBox"
           BasedOn="{StaticResource MetroTextBox}"
           TargetType="{x:Type TextBox}">
        <Setter Property="metro:TextBoxHelper.ButtonTemplate" Value="{DynamicResource ChromelessButtonTemplate}" />
        <!--  change SnapsToDevicePixels to True to view a better border and validation error  -->
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="enterGotFocus">
                            <DoubleAnimation Duration="0:0:0.2"
                                             Storyboard.TargetName="PART_Message"
                                             Storyboard.TargetProperty="Opacity"
                                             To=".2" />
                        </Storyboard>
                        <Storyboard x:Key="exitGotFocus">
                            <DoubleAnimation Duration="0:0:0.2"
                                             Storyboard.TargetName="PART_Message"
                                             Storyboard.TargetProperty="Opacity" />
                        </Storyboard>

                        <Storyboard x:Key="enterHasText">
                            <DoubleAnimation Duration="0:0:0.2"
                                             From=".2"
                                             Storyboard.TargetName="PART_Message"
                                             Storyboard.TargetProperty="Opacity"
                                             To="0" />
                        </Storyboard>
                        <Storyboard x:Key="exitHasText">
                            <DoubleAnimation Duration="0:0:0.2"
                                             Storyboard.TargetName="PART_Message"
                                             Storyboard.TargetProperty="Opacity" />
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <Grid>
                        <Border x:Name="Base"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        <Grid x:Name="PART_InnerGrid" Margin="2">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition x:Name="TextColumn" Width="*" />
                                <ColumnDefinition x:Name="ButtonColumn" Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition x:Name="ButtonRow" Height="*" />
                            </Grid.RowDefinitions>
                            <Grid x:Name="PART_FloatingMessageContainer"
                                  Grid.Column="0"
                                  Grid.ColumnSpan="2"
                                  Height="0"
                                  Margin="5,0"
                                  IsHitTestVisible="False"
                                  Visibility="Visible">
                                <TextBlock x:Name="PART_FloatingMessage"
                                           HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                           VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                           FontSize="{DynamicResource FloatingWatermarkFontSize}"
                                           Foreground="{TemplateBinding Foreground}"
                                           Opacity="0.6"
                                           Text="{TemplateBinding metro:TextBoxHelper.Watermark}">
                                    <TextBlock.RenderTransform>
                                        <TranslateTransform />
                                    </TextBlock.RenderTransform>
                                </TextBlock>
                            </Grid>
                            <Button x:Name="PART_ClearText"
                                    Grid.RowSpan="2"
                                    Grid.Column="1"
                                    Width="{Binding RelativeSource={RelativeSource TemplatedParent},
                                                    Path=(metro:ControlsHelper.ButtonWidth),
                                                    Mode=OneWay}"
                                    Content="{Binding RelativeSource={RelativeSource TemplatedParent},
                                                      Path=(metro:TextBoxHelper.ButtonContent),
                                                      Mode=OneWay}"
                                    FontFamily="{Binding RelativeSource={RelativeSource TemplatedParent},
                                                         Path=(metro:TextBoxHelper.ButtonFontFamily),
                                                         Mode=OneWay}"
                                    FontSize="16"
                                    Foreground="{TemplateBinding Foreground}"
                                    IsTabStop="False"
                                    Style="{DynamicResource ChromelessButtonStyle}"
                                    Template="{Binding RelativeSource={RelativeSource TemplatedParent},
                                                       Path=(metro:TextBoxHelper.ButtonTemplate),
                                                       Mode=OneWay}"
                                    metro:TextBoxHelper.IsClearTextButtonBehaviorEnabled="True" />

                            <Border x:Name="ReadOnlyVisualElement"
                                    Grid.Row="1"
                                    Grid.ColumnSpan="2"
                                    Background="{x:Null}"
                                    Opacity="0" />
                            <ScrollViewer x:Name="PART_ContentHost"
                                          Grid.Row="1"
                                          Grid.Column="0"
                                          Margin="2"
                                          VerticalAlignment="Stretch"
                                          Background="{x:Null}"
                                          BorderThickness="0"
                                          IsTabStop="False" />
                            <TextBlock x:Name="PART_Message"
                                       Grid.Row="1"
                                       Grid.Column="0"
                                       Margin="6,2,6,2"
                                       HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                       VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                       Foreground="{TemplateBinding Foreground}"
                                       IsHitTestVisible="False"
                                       Opacity="0.6"
                                       Padding="{TemplateBinding Padding}"
                                       Text="{TemplateBinding metro:TextBoxHelper.Watermark}"
                                       Visibility="Collapsed" />
                        </Grid>
                        <Border x:Name="DisabledVisualElement"
                                Background="{DynamicResource ControlsDisabledBrush}"
                                BorderBrush="{DynamicResource ControlsDisabledBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                IsHitTestVisible="False"
                                Opacity="0"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                Visibility="{Binding RelativeSource={RelativeSource TemplatedParent},
                                                     Path=(metro:ControlsHelper.DisabledVisualElementVisibility),
                                                     Mode=OneWay}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=(metro:TextBoxHelper.ButtonsAlignment)}" Value="Left">
                            <Setter TargetName="PART_ClearText" Property="Grid.Column" Value="0" />
                            <Setter TargetName="PART_Message" Property="Grid.Column" Value="1" />
                            <Setter TargetName="TextColumn" Property="Width" Value="Auto" />
                            <Setter TargetName="ButtonColumn" Property="Width" Value="*" />
                            <Setter TargetName="PART_ContentHost" Property="Grid.Column" Value="1" />
                        </DataTrigger>

                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=Text}" Value="">
                            <Setter TargetName="PART_Message" Property="Visibility" Value="Visible" />
                        </DataTrigger>

                        <!--  Sets the MiniMessage visibility (Watermark must not be "" and FloatWatermark must be true)  -->
                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=(metro:TextBoxHelper.HasText)}" Value="False">
                            <DataTrigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource HideFloatingMessageStoryboard}" />
                            </DataTrigger.EnterActions>
                            <DataTrigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource ShowFloatingMessageStoryboard}" />
                            </DataTrigger.ExitActions>
                        </DataTrigger>
                        <!--  To override Watermark == ""  -->
                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=(metro:TextBoxHelper.Watermark)}" Value="">
                            <DataTrigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource HideFloatingMessageStoryboard}" />
                            </DataTrigger.EnterActions>
                            <DataTrigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource ShowFloatingMessageStoryboard}" />
                            </DataTrigger.ExitActions>
                        </DataTrigger>
                        <!--  To override TextBoxHelper.UseFloatingWatermark == false  -->
                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=(metro:TextBoxHelper.UseFloatingWatermark)}" Value="False">
                            <DataTrigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource HideFloatingMessageStoryboard}" />
                            </DataTrigger.EnterActions>
                            <DataTrigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource ShowFloatingMessageStoryboard}" />
                            </DataTrigger.ExitActions>
                        </DataTrigger>

                        <!--  multiline textbox cannot bind to actual height so take the fallbach button width  -->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="TextWrapping" Value="NoWrap" />
                                <Condition Property="AcceptsReturn" Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="PART_ClearText" Property="Width" Value="{Binding RelativeSource={RelativeSource Self}, Path=ActualHeight, Mode=OneWay}" />
                        </MultiTrigger>

                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Base" Property="BorderBrush" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(metro:ControlsHelper.MouseOverBorderBrush)}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="DisabledVisualElement" Property="Opacity" Value="0.6" />
                        </Trigger>
                        <Trigger Property="IsReadOnly" Value="True">
                            <Setter TargetName="ReadOnlyVisualElement" Property="Opacity" Value="1" />
                        </Trigger>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter TargetName="Base" Property="BorderBrush" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(metro:ControlsHelper.FocusBorderBrush)}" />
                            <Setter TargetName="PART_FloatingMessage" Property="Foreground" Value="{DynamicResource AccentColorBrush}" />
                            <Setter TargetName="PART_FloatingMessage" Property="Opacity" Value="1" />
                        </Trigger>
                        <Trigger SourceName="PART_ClearText" Property="IsMouseOver" Value="True">
                            <Setter TargetName="PART_ClearText" Property="Background" Value="{DynamicResource GrayBrush8}" />
                            <Setter TargetName="PART_ClearText" Property="Foreground" Value="{DynamicResource AccentColorBrush}" />
                        </Trigger>
                        <Trigger SourceName="PART_ClearText" Property="IsPressed" Value="True">
                            <Setter TargetName="PART_ClearText" Property="Background" Value="{DynamicResource BlackBrush}" />
                            <Setter TargetName="PART_ClearText" Property="Foreground" Value="{DynamicResource WhiteBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>